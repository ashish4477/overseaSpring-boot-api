<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping SYSTEM
      "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" >

<hibernate-mapping package="com.bearcode.ovf.model.questionnaire">
    <class name="com.bearcode.ovf.model.questionnaire.WizardResults" table="pdf_answers" dynamic-insert="true">
        <id name="id" type="long" column="id">
            <generator class="native" />
        </id>
         <property name="creationDate" type="java.util.Date">
          <column name="created" sql-type="datetime" />
        </property>
        <property name="lastChangedDate" type="java.util.Date">
          <column name="updated" sql-type="datetime" />
        </property>
    <property name="flowType" column="flow_type" not-null="true">
      <type name="org.hibernate.type.EnumType">
        <param name="enumClass">com.bearcode.ovf.model.questionnaire.FlowType</param>
        <param name="type">12<!--value of java.sql.Types.VARCHAR--></param>
      </type>
    </property>
        <property name="faceUrl" type="string" column="face_name"/>
        <property name="currentPageTitle" type="string" column="page_title"/>
        <property name="downloaded" type="boolean" column="downloaded"/>
        <property name="emailSent" type="boolean" column="email_sent"/>
        <property name="reportable" type="boolean" column="reportable"/>

        <many-to-one name="user" column="user_id" not-null="false" />

        <property name="username" type="string"/>
        <many-to-one name="name" column="name_id" cascade="all" lazy="false"/>
        <many-to-one name="previousName" column="previous_name_id" cascade="all" lazy="false"/>


        <property name="phone" type="string" column="phone" />
        <property name="phoneType" type="string" column="phone_type" />
        <property name="alternateEmail" type="string" column="alternate_email" />
        <property name="alternatePhoneType" type="string" column="alternate_phone_type" />

        <many-to-one name="votingAddress" column="voting_address_id" cascade="all" lazy="false"/>
        <many-to-one name="currentAddress" column="current_address_id" cascade="all" lazy="false"/>
        <many-to-one name="forwardingAddress" column="forwarding_address_id" cascade="all" lazy="false"/>
        <many-to-one name="previousAddress" column="previous_address_id" cascade="all" lazy="false"/>

        <many-to-one name="votingRegion" class="com.bearcode.ovf.model.common.VotingRegion" column="voting_region" not-null="false" />
        <property name="eodRegionId" type="string" column="eod_region_id"/>
        <property name="votingRegionName" type="string" column="voting_region_name" />
        <property name="votingRegionState" type="string" column="voting_region_state" />
        <property name="voterType" type="string" column="voter_type" not-null="false" />
        <property name="voterClassificationType" type="string" column="voter_classification_type" not-null="false" />
        <property name="voterHistory" type="string" column="voter_history" not-null="false" />
        <property name="ballotPref" type="string" column="ballot_pref" />

        <property name="birthYear" type="int" column="birth_year" />
        <property name="birthMonth" type="int" column="birth_month" />
        <property name="birthDate" type="int" column="birth_date" />
        <property name="race" type="string" column="race" />
        <property name="ethnicity" type="string" column="ethnicity" />
        <property name="gender" type="string" column="gender" />
        <property name="party" type="string" column="party" />
        <property name="mobile" type="boolean" column="mobile" />
        <property name="mobileDeviceType" type="string" column="mobile_device" />
        <property name="OptIn" type="boolean" column="opt_in" />
        <property name="url" type="string" column="url" />
        <property name="uuid" type="string" column="uuid" />

        <bag name="answers" inverse="true"> <!-- fetch="join" -->
            <key column="pdf_answers_id"/>
            <one-to-many class="Answer" />
        </bag>
   </class>

    <query name="generationStats">
        SELECT COUNT(*), COUNT(DISTINCT user), flowType FROM WizardResults
        WHERE creationDate > :fromDate
        AND :toDate >= creationDate 
        GROUP BY flowType
    </query>


    <sql-query name="wizardresultsWithFieldValue">
        <return alias="wizardResults" class="com.bearcode.ovf.model.questionnaire.WizardResults"/>
        <![CDATA[
            SELECT DISTINCT {wizardResults.*}
            FROM `pdf_answers` wizardResults
            INNER JOIN `answers` ON `answers`.`pdf_answers_id` = wizardResults.`id`
            INNER JOIN `question_fields` ON `answers`.`field_id` = `question_fields`.id
            INNER JOIN `question_field_types` ON `question_field_types`.id = `question_fields`.type_id
            WHERE `question_field_types`.name LIKE :typeName
                AND answers.value = :value
                AND wizardResults.created >= :after
                AND wizardResults.created <= :before
            ORDER BY wizardResults.created desc
        ]]>
    </sql-query>

    <sql-query name="wizardresultsWithFieldSelectedValue">
        <return alias="wizardResults" class="com.bearcode.ovf.model.questionnaire.WizardResults"/>
        <![CDATA[
            SELECT {wizardResults.*}
            FROM `pdf_answers` wizardResults
            INNER JOIN `answers` ON `answers`.`pdf_answers_id` = wizardResults.`id`
            WHERE answers.field_id = :field
                AND answers.selected_value = :value
                AND wizardResults.created >= :after
                AND wizardResults.created <= :before
            ORDER BY wizardResults.created desc
    ]]>
    </sql-query>


</hibernate-mapping>
